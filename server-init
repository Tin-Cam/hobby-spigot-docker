#!/bin/sh

# Function to handle SIGTERM signal
on_terminate() {
    echo "server-init Received SIGTERM signal. Stopping server program..."
    stop_server
    echo "Server program stopped."
    exit 0
}

build_server() {
    if [ ! -f $DIR_SERVER/BuildTools.jar ]; then
        wget -O $DIR_SERVER/BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar
    fi
    java -jar $DIR_SERVER/BuildTools.jar
}

start_server() {
    # Register the signal handler for SIGTERM
    trap 'on_terminate' TERM

    # Start server
    echo "Starting server"
    screen -S spigot_server bash -c 'java -Xms1G -Xmx2G -jar /opt/spigot/$SPIGOT_APP --world-container $DIR_WORLDS/current --plugins $DIR_PLUGINS'
    echo "Server has shutdown."

    screen_pid=$(screen -ls | awk '/\.spigot_server\t/ {print substr($1, 1, index($1, ".")-1)}')
    echo 'Screen session is $screen_pid'
    echo "ps is"
    ps
}

stop_server() {
    screen -S spigot_server -p 0 -X eval 'stuff \"stop\"\015'
    echo 'Server is shutting down. Timing out after 60 seconds.'
    sleep 60
}



# Build server if not done already
if [ ! -f $DIR_SERVER/spigot-1.19.4.jar ]; then
    echo "Building server..."
    build_server
    start_server

    # Sign EULA if env variable is set to true
    if [ $EULA ]; then
        sed 's/false/true/' $DIR_SERVER/eula.txt > $DIR_SERVER/eula.txt
        cat $DIR_SERVER/eula.txt
        echo "EULA has been signed!"
    else
        echo "EULA must be signed before starting server!"
        exit
    fi
fi

# Run server
start_server